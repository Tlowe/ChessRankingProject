/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.chessrankingproject;

import java.awt.event.TextEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeMath.round;

/**
 *
 * @author Travis Lowe
 */
public class GameResultsFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewGameResultsFrame
     */
    public static final int WON = 1;
    public static final int LOSS = 2;
    public static final int Draw = 3;
    
    private PlayerArrayList PlayerList = new PlayerArrayList();
    private PlayerArrayList InterimPlayerList = new PlayerArrayList();
    public PlayerArrayList  OpponentList = new PlayerArrayList();
    DefaultListModel<Player> PlayerListModel = new DefaultListModel<>();
    DefaultListModel<Player> OpponentListModel = new DefaultListModel<>();
    Player SelectedPlayer = new Player();
    Player SelectedOppnt = new Player();
    int Kvalue = 0;
    
    private ArrayList<PlayerEventListener> listenerList = new ArrayList<>();
    //private ArrayList<PlayerHistory> gameResultList = new ArrayList<>();
    private DefaultListModel gameresultsListModel = new DefaultListModel();
    
    
    public synchronized void addListener (PlayerEventListener listener){ // add functions that will listen for the changes on this frame
        
        listenerList.add(listener);
    
    }
    
    
    public GameResultsFrame() {
        initComponents();
    }
   

    public GameResultsFrame(PlayerArrayList plist) {
        initComponents();
        this.PlayerList =  plist.getPlayerArrayListCopy();
        this.InterimPlayerList =  plist.getPlayerArrayListCopy(); // interim player list will hold the changed values from the player history objects
        
        intialSetup();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GameResultButtonGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        UpdateResultsButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        gameResultsList = new javax.swing.JList<PlayerHistory>();
        addResultButton = new javax.swing.JButton();
        WinRadioButton = new javax.swing.JRadioButton();
        LossRadioButton = new javax.swing.JRadioButton();
        DrawRadioButton = new javax.swing.JRadioButton();
        removeResutButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ChooseOpponentLastTextField = new javax.swing.JTextField();
        OpponentSearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChosenOpponentList = new javax.swing.JList<Player>();
        jPanel6 = new javax.swing.JPanel();
        PlayerSearchButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ChosenPlayerList = new javax.swing.JList<Player>();
        ChoosePlayerLastTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DebugResultsTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setText("1. Choose Player :");

        jLabel3.setText("2. Choose Opponent :");

        jLabel4.setText("3. Enter Game Results :");

        jButton2.setText("OK");

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(280, 300));

        UpdateResultsButton.setText("Update");
        UpdateResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateResultsButtonActionPerformed(evt);
            }
        });

        gameResultsList.setModel(gameresultsListModel
        );
        jScrollPane3.setViewportView(gameResultsList);

        addResultButton.setText("add ->");
        addResultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResultButtonActionPerformed(evt);
            }
        });

        GameResultButtonGroup.add(WinRadioButton);
        WinRadioButton.setText("Win");
        WinRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WinRadioButtonMouseClicked(evt);
            }
        });

        GameResultButtonGroup.add(LossRadioButton);
        LossRadioButton.setText("Loss");

        GameResultButtonGroup.add(DrawRadioButton);
        DrawRadioButton.setText("Draw");

        removeResutButton.setText("remove");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(WinRadioButton)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LossRadioButton)
                            .addComponent(DrawRadioButton))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeResutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addResultButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(UpdateResultsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                        .addGap(22, 22, 22))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(WinRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addResultButton)
                            .addComponent(LossRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DrawRadioButton)
                            .addComponent(removeResutButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addGap(52, 52, 52)
                .addComponent(UpdateResultsButton)
                .addGap(22, 22, 22))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ChooseOpponentLastTextField.setText("Search Last Name . . .");
        ChooseOpponentLastTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChooseOpponentLastTextFieldMouseClicked(evt);
            }
        });

        OpponentSearchButton.setText("Search");

        ChosenOpponentList.setModel(OpponentListModel);
        ChosenOpponentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ChosenOpponentListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ChosenOpponentList);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ChooseOpponentLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpponentSearchButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(ChooseOpponentLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OpponentSearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        PlayerSearchButton.setText("Search");
        PlayerSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerSearchButtonActionPerformed(evt);
            }
        });

        ChosenPlayerList.setModel(PlayerListModel);
        ChosenPlayerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ChosenPlayerListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(ChosenPlayerList);

        ChoosePlayerLastTextField.setText("Search Last Name . . .");
        ChoosePlayerLastTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChoosePlayerLastTextFieldMouseClicked(evt);
            }
        });
        ChoosePlayerLastTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoosePlayerLastTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ChoosePlayerLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlayerSearchButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(ChoosePlayerLastTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayerSearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("New Game Results");

        DebugResultsTextArea.setBackground(new java.awt.Color(240, 240, 240));
        DebugResultsTextArea.setColumns(20);
        DebugResultsTextArea.setRows(5);
        jScrollPane1.setViewportView(DebugResultsTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel2)
                .addGap(275, 275, 275)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(251, 251, 251))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(578, 578, 578))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(CancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChoosePlayerLastTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoosePlayerLastTextFieldActionPerformed
        
    }//GEN-LAST:event_ChoosePlayerLastTextFieldActionPerformed

    private void ChoosePlayerLastTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChoosePlayerLastTextFieldMouseClicked
      ChoosePlayerLastTextField.setText("");
    }//GEN-LAST:event_ChoosePlayerLastTextFieldMouseClicked

    private void ChooseOpponentLastTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChooseOpponentLastTextFieldMouseClicked
       ChooseOpponentLastTextField.setText("");
    }//GEN-LAST:event_ChooseOpponentLastTextFieldMouseClicked

    private void PlayerSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerSearchButtonActionPerformed
       
        
    }//GEN-LAST:event_PlayerSearchButtonActionPerformed

    private void UpdateResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateResultsButtonActionPerformed
        
        
                
        // for each player history in list. calculate a new ELo ranking in a loop. push that old history to the player's local record(maybe last 50 games??
        
        for(int i = 0; i < gameresultsListModel.getSize(); i++){
        
        
         PlayerHistory p = new PlayerHistory();
         
         p = (PlayerHistory) gameresultsListModel.get(i);
        
         
         Player player,opponent;
         
         player = InterimPlayerList.getPlayerByID(p.Player.getId());
         opponent = InterimPlayerList.getPlayerByID(p.Opponent.getId());
         
         
         Player playerLess ; 
         Player playerMore ;
         
         
         //find lower ranked player
         if(player.getCurrentRating() <= opponent.getCurrentRating()){
         
           
             
             
         playerLess = player;
         playerMore = opponent;
         
         }else{
         
         playerLess = opponent;
         playerMore = player;
                
         }
         
         float Diff = playerLess.getCurrentRating() - playerMore.getCurrentRating();
         
         Diff = (Diff< -400 || Diff > 400)? (Diff > 400)? 400:-400     : Diff;
         
         float xFactor = 0;
        
         if(Diff == 400){
         
             xFactor = 1;
         }
         else if(Diff == -400){
             xFactor = 31;
         }
         else{
             float temp = 15*(400-Diff)/400 +1;
            xFactor  = Math.round(temp*100.0)/100;
         }
         
       //  float Eless = (float)(1/(1+ Math.pow(10, playerMore.getCurrentRating()-playerLess.getCurrentRating()/400)));
            
         switch(p.getResultCode()){
         
             case WON:
                 player.addGamesWon(1);
                 player.setCurrentRating(player.getCurrentRating() + xFactor);
                 
                 
                 opponent.addGamesLost(1);
                 opponent.setCurrentRating(opponent.getCurrentRating() - xFactor);
                 break;
             case LOSS:
                 player.addGamesLost(1);
                 player.setCurrentRating(player.getCurrentRating() - ( 32 - xFactor ));
                 
                 opponent.addGamesWon(1);
                 opponent.setCurrentRating(opponent.getCurrentRating() + ( 32 - xFactor )); 
                 break;
             case Draw:
                 player.addGamesDrawn(1);
                 opponent.addGamesDrawn(1);
                 
                 float xDiv = xFactor/2;
                 player.setCurrentRating(player.getCurrentRating() + xDiv);
                 opponent.setCurrentRating(opponent.getCurrentRating() - xDiv); 
                 break;
         }
         
            
            player.setGamesPlayed(player.getGamesPlayed() + 1);
            opponent.setGamesPlayed(opponent.getGamesPlayed() + 1); 
         
            float pL_highestRating = ( player.getCurrentRating() < player.getHighestRating())? player.getHighestRating() : player.getCurrentRating();
            player.setHighestRating(pL_highestRating);
                 
            float pL_lowestRating = ( player.getCurrentRating() > player.getLowestRating())? player.getLowestRating(): player.getCurrentRating();
            player.setLowestRating(pL_lowestRating);
         
            updatePlayerStats(InterimPlayerList.getPlayerByID(player.getId()),player, InterimPlayerList.getPlayerByID(opponent.getId()),opponent);
        }
         
          
            
            
            javax.swing.JPanel pan = new dialogForm(PlayerList, InterimPlayerList,SelectedPlayer,SelectedOppnt);
            int result = JOptionPane.showConfirmDialog(null,pan, "Results",JOptionPane.YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
    
            
            
        
                fireEvent(new UpdateDatabaseEvent(InterimPlayerList));
                fireEvent(new edu.chessrankingproject.PlayerTextEvent(" Player " + SelectedPlayer.getCombinedName() + " and Player " + SelectedOppnt.getCombinedName()+ " have updated stats"));
                
                gameresultsListModel.clear();
                
                DebugResultsTextArea.setText("Players " + SelectedPlayer.getCombNameFL() + " and " + SelectedOppnt.getCombNameFL() + " have updated stats!!");
            
            } else {
                DebugResultsTextArea.append("User canceled. NO player stats were updated.\n\n");
                InterimPlayerList = PlayerList.getPlayerArrayListCopy();
            }
            
            
      
       
    }//GEN-LAST:event_UpdateResultsButtonActionPerformed

    private void ChosenPlayerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ChosenPlayerListValueChanged
        
        OpponentListModel.clear();
        SelectedPlayer = ChosenPlayerList.getSelectedValue();
        OpponentList =  PlayerList.getPlayerArrayListCopy();
        OpponentList.remove(SelectedPlayer);
        
        Iterator<Player> itP = OpponentList.listIterator();
        
        while(itP.hasNext()){
        
         if(itP.next().getId() == SelectedPlayer.getId()){
             
             itP.remove();
             break;
         }
        
        }
        
        for (Player p : OpponentList){
            
            OpponentListModel.addElement(p);
        }
        ChosenOpponentList.setModel(OpponentListModel);
        
        gameresultsListModel.clear();
        
    }//GEN-LAST:event_ChosenPlayerListValueChanged

    private void ChosenOpponentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ChosenOpponentListValueChanged
        SelectedOppnt = ChosenOpponentList.getSelectedValue();
        UpdateResultsButton.setEnabled(true);
        gameresultsListModel.clear();
    }//GEN-LAST:event_ChosenOpponentListValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fireEvent( new WindowClosingEvent(evt));
    }//GEN-LAST:event_formWindowClosing

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
       fireEvent( new WindowClosingEvent(evt));
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void WinRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WinRadioButtonMouseClicked
        
    }//GEN-LAST:event_WinRadioButtonMouseClicked

    private void addResultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResultButtonActionPerformed
       
        if(ChosenPlayerList.isSelectionEmpty()  ){
        
            DebugResultsTextArea.append("Please select a Player from the Player list\n\n");
        }
        if(ChosenOpponentList.isSelectionEmpty()){
        
             DebugResultsTextArea.append("Please select a Player from the Opponent list\n\n");
        }
        
        boolean radioButtonSelected = (WinRadioButton.isSelected() || LossRadioButton.isSelected() || DrawRadioButton.isSelected());
        if(  radioButtonSelected == false){
        
            DebugResultsTextArea.append("Please select a game result\n\n");
            
        }
        
        if(!(ChosenPlayerList.isSelectionEmpty() || ChosenOpponentList.isSelectionEmpty()) && radioButtonSelected == true){
            PlayerHistory plHist = new PlayerHistory(GameResultButtonGroup.getSelection().getActionCommand(),SelectedPlayer,SelectedOppnt);
            gameresultsListModel.addElement(plHist);
            gameResultsList.setModel(gameresultsListModel);
        }
    }//GEN-LAST:event_addResultButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameResultsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JTextField ChooseOpponentLastTextField;
    private javax.swing.JTextField ChoosePlayerLastTextField;
    private javax.swing.JList<Player> ChosenOpponentList;
    private javax.swing.JList<Player> ChosenPlayerList;
    private javax.swing.JTextArea DebugResultsTextArea;
    private javax.swing.JRadioButton DrawRadioButton;
    private javax.swing.ButtonGroup GameResultButtonGroup;
    private javax.swing.JRadioButton LossRadioButton;
    private javax.swing.JButton OpponentSearchButton;
    private javax.swing.JButton PlayerSearchButton;
    private javax.swing.JButton UpdateResultsButton;
    private javax.swing.JRadioButton WinRadioButton;
    private javax.swing.JButton addResultButton;
    private javax.swing.JList<PlayerHistory> gameResultsList;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton removeResutButton;
    // End of variables declaration//GEN-END:variables

    private void intialSetup() {
        
        
        for (Player p : PlayerList){
            
            PlayerListModel.addElement(p);
        }
        ChosenPlayerList.setModel(PlayerListModel);
        UpdateResultsButton.setEnabled(false);
        
      //  gameResultsList.setModel(new DefaultListModel());
        
        WinRadioButton.setActionCommand("1");
        LossRadioButton.setActionCommand("2");
        DrawRadioButton.setActionCommand("3");
        
        
        
    }
    
    
    
    
    private synchronized void fireEvent(java.util.EventObject evt){
        
        if (evt instanceof UpdateDatabaseEvent){ 
    
                if( !( InterimPlayerList == null || InterimPlayerList.isEmpty() )  ){    
                    for(PlayerEventListener eachplistener : listenerList){

                    eachplistener.updateDatabase(InterimPlayerList);
                    }
                }
        }
        else if(evt instanceof PlayerTextEvent){
          
                for(PlayerEventListener eachplistener : listenerList){

                    eachplistener.updateDebugText(((PlayerTextEvent) evt).getText());
                    }
        
        
        }
        
        else if(evt instanceof WindowClosingEvent){
        
            for(PlayerEventListener eachplistener : listenerList){

                    eachplistener.windowClosing();
                    }
        
        }
    }

    private void updatePlayerStats(Player Arrayplayer, Player player, Player ArrayOppont, Player opponent) {
        Arrayplayer.copyAndTransormTO(player);
        ArrayOppont.copyAndTransormTO(opponent);
    }
    
    
}
